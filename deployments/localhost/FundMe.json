{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa40ff11eff74cd67c6b47bf69675c636ed611ef5cde78eddf7e8055c782f1bc3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "854823",
    "logsBloom": "0x
    "blockHash": "0x9823ec977db4319378311d54be0c93894baa3fee36f393dd118c9759e5e3063b",
    "transactionHash": "0xa40ff11eff74cd67c6b47bf69675c636ed611ef5cde78eddf7e8055c782f1bc3",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "854823",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "d86a7f5061879c5fb72e750d1f712b59",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Ritesh gurjar\",\"details\":\"This implements price feeds as our libraries\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract or crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n//833091\\n//813555\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\n/** @title A contract or crowd funding\\n * @author Ritesh gurjar\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our libraries\\n */\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe_NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You Need to spend more eth\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 fundersIndex = 0;\\n            fundersIndex < funders.length;\\n            fundersIndex++\\n        ) {\\n            address funder = funders[fundersIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x8d052be538073f35c0a5a1486d484e27456bfd29539d748904ad428f49901519\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e10;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xa4f9996863a34d8e6a5af24c99cdaaf669d96e39e4a24ace57aef206025b2c71\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f7a380380610f7a83398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e15610165600039600081816102d4015261055f0152610e156000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a3565b610512565b6040516100d891906107e9565b60405180910390f35b3480156100ed57600080fd5b506100f661052a565b60405161010391906107e9565b60405180910390f35b34801561011857600080fd5b50610121610537565b60405161012e9190610863565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055d565b604051610163919061088d565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d4565b610581565b6040516101a0919061088d565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c090919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610357576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040257600080828154811061037c5761037b61097e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fa906109dc565b91505061035a565b50600067ffffffffffffffff81111561041e5761041d610a25565b5b60405190808252806020026020018201604052801561044c5781602001602082028036833780820191505090505b5060009080519060200190610462929190610699565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048990610a85565b60006040518083038185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b505090508061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610ae6565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cc836105f9565b905060006402540be40085836105e29190610b06565b6105ec9190610b8f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064257600080fd5b505afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190610c4d565b5050509150506402540be400816106919190610cc8565b915050919050565b828054828255906000526020600020908101928215610712579160200282015b828111156107115782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b9565b5b50905061071f9190610723565b5090565b5b8082111561073c576000816000905550600101610724565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077082610745565b9050919050565b61078081610765565b811461078b57600080fd5b50565b60008135905061079d81610777565b92915050565b6000602082840312156107b9576107b8610740565b5b60006107c78482850161078e565b91505092915050565b6000819050919050565b6107e3816107d0565b82525050565b60006020820190506107fe60008301846107da565b92915050565b6000819050919050565b600061082961082461081f84610745565b610804565b610745565b9050919050565b600061083b8261080e565b9050919050565b600061084d82610830565b9050919050565b61085d81610842565b82525050565b60006020820190506108786000830184610854565b92915050565b61088781610765565b82525050565b60006020820190506108a2600083018461087e565b92915050565b6108b1816107d0565b81146108bc57600080fd5b50565b6000813590506108ce816108a8565b92915050565b6000602082840312156108ea576108e9610740565b5b60006108f8848285016108bf565b91505092915050565b600082825260208201905092915050565b7f596f75204e65656420746f207370656e64206d6f726520657468000000000000600082015250565b6000610948601a83610901565b915061095382610912565b602082019050919050565b600060208201905081810360008301526109778161093b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e7826107d0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1a57610a196109ad565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a6f600083610a54565b9150610a7a82610a5f565b600082019050919050565b6000610a9082610a62565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad0600b83610901565b9150610adb82610a9a565b602082019050919050565b60006020820190508181036000830152610aff81610ac3565b9050919050565b6000610b11826107d0565b9150610b1c836107d0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5557610b546109ad565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9a826107d0565b9150610ba5836107d0565b925082610bb557610bb4610b60565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bdf81610bc0565b8114610bea57600080fd5b50565b600081519050610bfc81610bd6565b92915050565b6000819050919050565b610c1581610c02565b8114610c2057600080fd5b50565b600081519050610c3281610c0c565b92915050565b600081519050610c47816108a8565b92915050565b600080600080600060a08688031215610c6957610c68610740565b5b6000610c7788828901610bed565b9550506020610c8888828901610c23565b9450506040610c9988828901610c38565b9350506060610caa88828901610c38565b9250506080610cbb88828901610bed565b9150509295509295909350565b6000610cd382610c02565b9150610cde83610c02565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1d57610d1c6109ad565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5a57610d596109ad565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9757610d966109ad565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd457610dd36109ad565b5b82820290509291505056fea2646970667358221220325b277edfaadace1f5d9db8deed54f14e5e82aeabb02d4b018113247929af3564736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a3565b610512565b6040516100d891906107e9565b60405180910390f35b3480156100ed57600080fd5b506100f661052a565b60405161010391906107e9565b60405180910390f35b34801561011857600080fd5b50610121610537565b60405161012e9190610863565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055d565b604051610163919061088d565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d4565b610581565b6040516101a0919061088d565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c090919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610357576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040257600080828154811061037c5761037b61097e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fa906109dc565b91505061035a565b50600067ffffffffffffffff81111561041e5761041d610a25565b5b60405190808252806020026020018201604052801561044c5781602001602082028036833780820191505090505b5060009080519060200190610462929190610699565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048990610a85565b60006040518083038185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b505090508061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610ae6565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cc836105f9565b905060006402540be40085836105e29190610b06565b6105ec9190610b8f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064257600080fd5b505afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190610c4d565b5050509150506402540be400816106919190610cc8565b915050919050565b828054828255906000526020600020908101928215610712579160200282015b828111156107115782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b9565b5b50905061071f9190610723565b5090565b5b8082111561073c576000816000905550600101610724565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077082610745565b9050919050565b61078081610765565b811461078b57600080fd5b50565b60008135905061079d81610777565b92915050565b6000602082840312156107b9576107b8610740565b5b60006107c78482850161078e565b91505092915050565b6000819050919050565b6107e3816107d0565b82525050565b60006020820190506107fe60008301846107da565b92915050565b6000819050919050565b600061082961082461081f84610745565b610804565b610745565b9050919050565b600061083b8261080e565b9050919050565b600061084d82610830565b9050919050565b61085d81610842565b82525050565b60006020820190506108786000830184610854565b92915050565b61088781610765565b82525050565b60006020820190506108a2600083018461087e565b92915050565b6108b1816107d0565b81146108bc57600080fd5b50565b6000813590506108ce816108a8565b92915050565b6000602082840312156108ea576108e9610740565b5b60006108f8848285016108bf565b91505092915050565b600082825260208201905092915050565b7f596f75204e65656420746f207370656e64206d6f726520657468000000000000600082015250565b6000610948601a83610901565b915061095382610912565b602082019050919050565b600060208201905081810360008301526109778161093b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e7826107d0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1a57610a196109ad565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a6f600083610a54565b9150610a7a82610a5f565b600082019050919050565b6000610a9082610a62565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad0600b83610901565b9150610adb82610a9a565b602082019050919050565b60006020820190508181036000830152610aff81610ac3565b9050919050565b6000610b11826107d0565b9150610b1c836107d0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5557610b546109ad565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9a826107d0565b9150610ba5836107d0565b925082610bb557610bb4610b60565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bdf81610bc0565b8114610bea57600080fd5b50565b600081519050610bfc81610bd6565b92915050565b6000819050919050565b610c1581610c02565b8114610c2057600080fd5b50565b600081519050610c3281610c0c565b92915050565b600081519050610c47816108a8565b92915050565b600080600080600060a08688031215610c6957610c68610740565b5b6000610c7788828901610bed565b9550506020610c8888828901610c23565b9450506040610c9988828901610c38565b9350506060610caa88828901610c38565b9250506080610cbb88828901610bed565b9150509295509295909350565b6000610cd382610c02565b9150610cde83610c02565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1d57610d1c6109ad565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5a57610d596109ad565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9757610d966109ad565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd457610dd36109ad565b5b82820290509291505056fea2646970667358221220325b277edfaadace1f5d9db8deed54f14e5e82aeabb02d4b018113247929af3564736f6c63430008080033",
  "devdoc": {
    "author": "Ritesh gurjar",
    "details": "This implements price feeds as our libraries",
    "kind": "dev",
    "methods": {},
    "title": "A contract or crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}